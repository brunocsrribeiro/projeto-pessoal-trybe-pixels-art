{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 35,
    "pending": 0,
    "failures": 6,
    "start": "2021-09-14T04:15:01.766Z",
    "end": "2021-09-14T04:16:01.982Z",
    "duration": 60216,
    "testsRegistered": 41,
    "passPercent": 85.36585365853658,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4fb1c8c7-6cb7-4821-82a1-2a53b5815fb3",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd507db9-f5a0-415c-919c-5ba20ffe0135",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "d0b0d55d-2e5c-45a8-9968-aee1b7b75a60",
              "parentUUID": "dd507db9-f5a0-415c-919c-5ba20ffe0135",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0b0d55d-2e5c-45a8-9968-aee1b7b75a60"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 369,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ab3ab4d-345e-4ef1-9453-119585225417",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "1d391ebb-1b9c-474c-a1ae-a6ff1c324b3f",
              "parentUUID": "2ab3ab4d-345e-4ef1-9453-119585225417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "56b3196a-38f1-405c-a970-4474025e3187",
              "parentUUID": "2ab3ab4d-345e-4ef1-9453-119585225417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "00544bb4-e477-4ae7-b9ca-569a28c6db23",
              "parentUUID": "2ab3ab4d-345e-4ef1-9453-119585225417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "e642a707-bbe0-4449-9d52-76e68beb49db",
              "parentUUID": "2ab3ab4d-345e-4ef1-9453-119585225417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "bcbe4177-3a66-4025-bf7d-f5e79ff94083",
              "parentUUID": "2ab3ab4d-345e-4ef1-9453-119585225417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "fad82b06-5a1c-4f4e-8720-997eb562522d",
              "parentUUID": "2ab3ab4d-345e-4ef1-9453-119585225417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2b44cf2a-eb7b-436f-979c-731d7eaf8819",
              "parentUUID": "2ab3ab4d-345e-4ef1-9453-119585225417",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d391ebb-1b9c-474c-a1ae-a6ff1c324b3f",
            "56b3196a-38f1-405c-a970-4474025e3187",
            "00544bb4-e477-4ae7-b9ca-569a28c6db23",
            "e642a707-bbe0-4449-9d52-76e68beb49db",
            "bcbe4177-3a66-4025-bf7d-f5e79ff94083",
            "fad82b06-5a1c-4f4e-8720-997eb562522d",
            "2b44cf2a-eb7b-436f-979c-731d7eaf8819"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9edd020-ca3a-48b5-b9f5-a418054c8e88",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f30d690f-e58c-4621-a318-93434a821077",
              "parentUUID": "d9edd020-ca3a-48b5-b9f5-a418054c8e88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "7c89e172-71bb-4501-9b86-272ad3d66ae4",
              "parentUUID": "d9edd020-ca3a-48b5-b9f5-a418054c8e88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f30d690f-e58c-4621-a318-93434a821077",
            "7c89e172-71bb-4501-9b86-272ad3d66ae4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 464,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9e2ea45e-dde4-4d40-9c8a-39a07713a7a4",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "949c165f-64bc-4bb3-af56-3d3018b30f52",
              "parentUUID": "9e2ea45e-dde4-4d40-9c8a-39a07713a7a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "02ea1338-18a1-4f43-9103-b23ce088825e",
              "parentUUID": "9e2ea45e-dde4-4d40-9c8a-39a07713a7a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 285,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e50d6624-0017-43ed-b987-8eea57c79805",
              "parentUUID": "9e2ea45e-dde4-4d40-9c8a-39a07713a7a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "88f4e187-487b-44e1-ba80-f2e25305381a",
              "parentUUID": "9e2ea45e-dde4-4d40-9c8a-39a07713a7a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "949c165f-64bc-4bb3-af56-3d3018b30f52",
            "02ea1338-18a1-4f43-9103-b23ce088825e",
            "e50d6624-0017-43ed-b987-8eea57c79805",
            "88f4e187-487b-44e1-ba80-f2e25305381a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 752,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8691172-5c7b-42f0-b0c7-cf23596a051d",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "e691fd88-5b37-4615-990b-efc6e23bfaba",
              "parentUUID": "b8691172-5c7b-42f0-b0c7-cf23596a051d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "91668e11-e293-4b09-8a1d-3ec228b9297d",
              "parentUUID": "b8691172-5c7b-42f0-b0c7-cf23596a051d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e691fd88-5b37-4615-990b-efc6e23bfaba",
            "91668e11-e293-4b09-8a1d-3ec228b9297d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1037,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4df7c0ac-4d52-40ed-abfb-8c5feac78ab1",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "2ca55365-ad9a-4998-8adc-91fa1199b13d",
              "parentUUID": "4df7c0ac-4d52-40ed-abfb-8c5feac78ab1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "58a9526c-971c-40c1-a7fc-b3588755688c",
              "parentUUID": "4df7c0ac-4d52-40ed-abfb-8c5feac78ab1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ca55365-ad9a-4998-8adc-91fa1199b13d",
            "58a9526c-971c-40c1-a7fc-b3588755688c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4b912814-ae20-4179-9f22-6f36abe4a7e3",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 578,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "f20478aa-9951-484a-9e6c-85c35a00fa91",
              "parentUUID": "4b912814-ae20-4179-9f22-6f36abe4a7e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "90383eff-1d54-4df9-b372-1720bed33b9a",
              "parentUUID": "4b912814-ae20-4179-9f22-6f36abe4a7e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f20478aa-9951-484a-9e6c-85c35a00fa91",
            "90383eff-1d54-4df9-b372-1720bed33b9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10095,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "46b70d1e-1178-4664-97ca-dbefcb14f9f4",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "2befe427-5b29-41a1-9cfb-b32d0a239662",
              "parentUUID": "46b70d1e-1178-4664-97ca-dbefcb14f9f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "675d1d2d-00b2-4a38-90b6-3ffe3addeb66",
              "parentUUID": "46b70d1e-1178-4664-97ca-dbefcb14f9f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ef308395-756d-438d-b753-0208cb45f5cd",
              "parentUUID": "46b70d1e-1178-4664-97ca-dbefcb14f9f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2befe427-5b29-41a1-9cfb-b32d0a239662",
            "675d1d2d-00b2-4a38-90b6-3ffe3addeb66",
            "ef308395-756d-438d-b753-0208cb45f5cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13831,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99a5f0af-92a3-46e7-a6aa-7d46b59e97db",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "02254fde-ab32-40d4-9a31-9a80bd30765c",
              "parentUUID": "99a5f0af-92a3-46e7-a6aa-7d46b59e97db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "512a177e-1da4-4ace-aaf9-32da19ea38ee",
              "parentUUID": "99a5f0af-92a3-46e7-a6aa-7d46b59e97db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "af93f40e-d77e-49a5-8a38-a59d45562826",
              "parentUUID": "99a5f0af-92a3-46e7-a6aa-7d46b59e97db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 6822,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(210, 77, 24)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(210, 77, 24)'\n    at cypressErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6d21d26a-d200-4cc1-8f9e-5214a831edf6",
              "parentUUID": "99a5f0af-92a3-46e7-a6aa-7d46b59e97db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02254fde-ab32-40d4-9a31-9a80bd30765c",
            "512a177e-1da4-4ace-aaf9-32da19ea38ee",
            "af93f40e-d77e-49a5-8a38-a59d45562826"
          ],
          "failures": [
            "6d21d26a-d200-4cc1-8f9e-5214a831edf6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7250,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "42c79659-2f6d-43d5-b763-d8d24c724dff",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "8aaf305e-67d1-411c-8c0d-9b1d485bd1a8",
              "parentUUID": "42c79659-2f6d-43d5-b763-d8d24c724dff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "abc1fc27-8429-454d-a0f5-a384512e7cc9",
              "parentUUID": "42c79659-2f6d-43d5-b763-d8d24c724dff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "28b18d26-5c43-450a-a6c8-63bb435a6f08",
              "parentUUID": "42c79659-2f6d-43d5-b763-d8d24c724dff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "ca59eb0d-07b9-42f1-b682-6bd65401d4e0",
              "parentUUID": "42c79659-2f6d-43d5-b763-d8d24c724dff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "238b2b36-47cb-4b5f-95bc-445904562a79",
              "parentUUID": "42c79659-2f6d-43d5-b763-d8d24c724dff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "f9793128-798c-4b32-8fe2-4183ce8f9d90",
              "parentUUID": "42c79659-2f6d-43d5-b763-d8d24c724dff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 496,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:39735/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39735/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39735/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39735/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39735/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39735/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39735/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39735/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39735/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "941afe6c-89df-4556-97a8-aa8a72a91d9c",
              "parentUUID": "42c79659-2f6d-43d5-b763-d8d24c724dff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4900,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7728156f-5624-4654-8572-3971efc200f2",
              "parentUUID": "42c79659-2f6d-43d5-b763-d8d24c724dff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4941,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1048a578-b4c6-4822-9e35-bb31c57f9bf6",
              "parentUUID": "42c79659-2f6d-43d5-b763-d8d24c724dff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8aaf305e-67d1-411c-8c0d-9b1d485bd1a8",
            "abc1fc27-8429-454d-a0f5-a384512e7cc9",
            "28b18d26-5c43-450a-a6c8-63bb435a6f08",
            "ca59eb0d-07b9-42f1-b682-6bd65401d4e0",
            "238b2b36-47cb-4b5f-95bc-445904562a79",
            "f9793128-798c-4b32-8fe2-4183ce8f9d90"
          ],
          "failures": [
            "941afe6c-89df-4556-97a8-aa8a72a91d9c",
            "7728156f-5624-4654-8572-3971efc200f2",
            "1048a578-b4c6-4822-9e35-bb31c57f9bf6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11291,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e107bcdb-e9bc-456f-ad73-011fef5c47e2",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4932,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cf2acc75-aeaa-48c1-989d-e4eeae65e192",
              "parentUUID": "e107bcdb-e9bc-456f-ad73-011fef5c47e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "03e7bfc6-8236-4fa0-b3fc-01dde17d637b",
              "parentUUID": "e107bcdb-e9bc-456f-ad73-011fef5c47e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4805,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cce49a2a-7e66-4d02-ba9c-daad68839b0e",
              "parentUUID": "e107bcdb-e9bc-456f-ad73-011fef5c47e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03e7bfc6-8236-4fa0-b3fc-01dde17d637b"
          ],
          "failures": [
            "cf2acc75-aeaa-48c1-989d-e4eeae65e192",
            "cce49a2a-7e66-4d02-ba9c-daad68839b0e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10453,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "117233fe-9251-44ec-a64d-db170afaa7c7",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 723,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "0ba1e0a7-b7d3-4ee1-a69d-ef5c58f980d8",
              "parentUUID": "117233fe-9251-44ec-a64d-db170afaa7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 690,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "b3d5dfd8-fb9d-4c53-a77f-15ddbcea8f6e",
              "parentUUID": "117233fe-9251-44ec-a64d-db170afaa7c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ba1e0a7-b7d3-4ee1-a69d-ef5c58f980d8",
            "b3d5dfd8-fb9d-4c53-a77f-15ddbcea8f6e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}